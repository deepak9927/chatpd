generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Project {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  progress    Float     @default(0)
  dueDate     DateTime?
  ownerId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  members     ProjectMember[]
  tasks       Task[]
  documents   Document[]
  chats       Chat[]
  courses     Course[]
}

model ProjectMember {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  role      String   @default("MEMBER")
  projectId String   @db.ObjectId
  joinedAt  DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([userId, projectId])
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      String    @default("TODO")
  priority    String    @default("MEDIUM")
  dueDate     DateTime?
  assigneeId  String?
  projectId   String    @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Document {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  projectId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Chat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String
  projectId String   @db.ObjectId
  createdAt DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Course {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  content     String
  projectId   String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  enrollments Enrollment[]
}
